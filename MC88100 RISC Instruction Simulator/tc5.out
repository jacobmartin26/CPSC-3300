instruction trace:
at 00, add  r1,r0,5
at 04, add  r2,r0,20
at 08, st   r1,r0,r2
  write access at address 20
at 0c, add  r2,r2,4
at 10, sub  r1,r1,1
at 14, bcnd ne0,r1,fffd (= decimal -3)
at 08, st   r1,r0,r2
  write access at address 24
at 0c, add  r2,r2,4
at 10, sub  r1,r1,1
at 14, bcnd ne0,r1,fffd (= decimal -3)
at 08, st   r1,r0,r2
  write access at address 28
at 0c, add  r2,r2,4
at 10, sub  r1,r1,1
at 14, bcnd ne0,r1,fffd (= decimal -3)
at 08, st   r1,r0,r2
  write access at address 2c
at 0c, add  r2,r2,4
at 10, sub  r1,r1,1
at 14, bcnd ne0,r1,fffd (= decimal -3)
at 08, st   r1,r0,r2
  write access at address 30
at 0c, add  r2,r2,4
at 10, sub  r1,r1,1
at 14, bcnd ne0,r1,fffd (= decimal -3)
at 18, ld   r3,r0,28
  read access at address 28
at 1c, halt
  r0: 00000000  r8: 00000000  r10: 00000000  r18: 00000000
  r1: 00000000  r9: 00000000  r11: 00000000  r19: 00000000
  r2: 00000034  ra: 00000000  r12: 00000000  r1a: 00000000
  r3: 00000003  rb: 00000000  r13: 00000000  r1b: 00000000
  r4: 00000000  rc: 00000000  r14: 00000000  r1c: 00000000
  r5: 00000000  rd: 00000000  r15: 00000000  r1d: 00000000
  r6: 00000000  re: 00000000  r16: 00000000  r1e: 00000000
  r7: 00000000  rf: 00000000  r17: 00000000  r1f: 00000000

execution statistics (in decimal):
  instruction fetches = 24
  data words read     = 1
  data words written  = 5
  branches executed   = 5
  branches taken      = 4 (80.0%)
